// Mocks generated by Mockito 5.4.6 from annotations
// in cos_challenge/test/presenter/home/home_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cos_challenge/data/models/user.dart' as _i2;
import 'package:cos_challenge/data/repositories/auth/auth_repository.dart'
    as _i3;
import 'package:cos_challenge/data/repositories/vehicle/vehicle_repository.dart'
    as _i5;
import 'package:cos_challenge/data/repositories/vehicle/vehicle_response.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.User?> autoLogin() =>
      (super.noSuchMethod(
            Invocation.method(#autoLogin, []),
            returnValue: _i4.Future<_i2.User?>.value(),
          )
          as _i4.Future<_i2.User?>);

  @override
  _i4.Future<_i2.User> signIn(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [email, password]),
            returnValue: _i4.Future<_i2.User>.value(
              _FakeUser_0(this, Invocation.method(#signIn, [email, password])),
            ),
          )
          as _i4.Future<_i2.User>);

  @override
  _i4.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [VehicleRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockVehicleRepository extends _i1.Mock implements _i5.VehicleRepository {
  MockVehicleRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i6.VehicleResponse> fetchByVin(String? vin, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchByVin, [vin, userId]),
            returnValue: _i4.Future<_i6.VehicleResponse>.value(
              _i7.dummyValue<_i6.VehicleResponse>(
                this,
                Invocation.method(#fetchByVin, [vin, userId]),
              ),
            ),
          )
          as _i4.Future<_i6.VehicleResponse>);
}
